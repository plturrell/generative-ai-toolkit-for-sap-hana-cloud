version: '3.8'

services:
  hana-ai-backend:
    build:
      context: .
      dockerfile: deployment/nvidia-t4/Dockerfile
    image: hana-ai-toolkit-t4:${TAG:-latest}
    container_name: hana-ai-toolkit-t4-backend
    env_file:
      - deployment/nvidia-t4/t4-environment.env
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=${API_PORT:-8000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      - DEPLOYMENT_PLATFORM=nvidia
      - T4_OPTIMIZED=true
      - ENABLE_GPU_ACCELERATION=true
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - CUDA_MEMORY_FRACTION=0.8
      - ENABLE_TENSORRT=true
      - TENSORRT_PRECISION=fp16
      - ENABLE_KERNEL_FUSION=true
      - ENABLE_FLASH_ATTENTION=true
      - ENABLE_ADAPTIVE_BATCH=true
      - ENABLE_ALGORITHM_TRANSITIONS=true
      - ENABLE_GESTURE_SUPPORT=true
      - PROMETHEUS_ENABLED=true
    ports:
      - "${API_PORT:-8000}:8000"
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - nvidia-cache:/tmp/cuda-cache
      - tensorrt-cache:/tmp/tensorrt_engines
      - model-cache:/app/model-cache
      - config-data:/app/config
    restart: unless-stopped
    networks:
      - hana-ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  prometheus:
    image: prom/prometheus:latest
    container_name: hana-ai-prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "${PROMETHEUS_WEB_PORT:-9091}:9090"
    restart: unless-stopped
    networks:
      - hana-ai-network

  grafana:
    image: grafana/grafana:latest
    container_name: hana-ai-grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    restart: unless-stopped
    networks:
      - hana-ai-network
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: hana-ai-nginx
    ports:
      - "${NGINX_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend:/usr/share/nginx/html:ro
    restart: unless-stopped
    networks:
      - hana-ai-network
    depends_on:
      - hana-ai-backend

  nvidia-smi-exporter:
    image: utkuozdemir/nvidia_gpu_exporter:latest
    container_name: nvidia-smi-exporter
    restart: unless-stopped
    ports:
      - "9835:9835"
    runtime: nvidia
    networks:
      - hana-ai-network
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on:
      - prometheus
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

networks:
  hana-ai-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
  nvidia-cache:
  tensorrt-cache:
  model-cache:
  config-data: